<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yanyan.persist.system.MessageDao">

    <cache/>

    <insert id="insertMessage" parameterType="Message" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO s_message
          (id, business_code, from_staff_id, to_staff_id, content, post_time,
           read_time, status, corp_id)
        VALUES
          (#{id}, #{business_code}, #{from_staff_id}, #{to_staff_id}, #{content}, #{post_time},
           #{read_time}, #{status}, #{corp_id})
    </insert>

    <update id="updateMessage" parameterType="Message">
        UPDATE euc.s_message
           SET business_code = #{business_code}, from_staff_id = #{from_staff_id},
               to_staff_id = #{to_staff_id}, content = #{content},
               post_time = #{post_time}, read_time = #{read_time}
         WHERE id = #{id}
    </update>

    <update id="readMessage">
        update s_message set read_time = #{read_time} where id = #{id}
    </update>

    <update id="deleteMessage">
        update s_message set status = 0 where id = #{id}
    </update>

    <sql id="select_message_sql">
        SELECT id, business_code, business_id, from_staff_id,
               (SELECT t.nickname FROM s_staff t WHERE t.id = a.from_staff_id) from_staff_name,
               to_staff_id,
               (SELECT t.nickname FROM s_staff t WHERE t.id = a.to_staff_id) to_staff_name,
               content, post_time, read_time, status, corp_id
          FROM s_message a
    </sql>

    <select id="getMessage" resultType="Message">
        <include refid="select_message_sql"></include>
        <where>
            a.id = #{id}
        </where>
    </select>

    <select id="findMessage" resultType="Message">
        <include refid="select_message_sql"></include>
        where a.status = 1
        <if test="corp_id != null">
            AND a.corp_id = #{corp_id}
        </if>
        <if test="to_staff_id != null">
            AND a.to_staff_id = #{to_staff_id}
        </if>
        <if test="from_staff_id != null">
            AND a.from_staff_id = #{from_staff_id}
        </if>
        <choose>
            <when test="read==true">
                <![CDATA[
                AND read_time <> ''
                ]]>
            </when>
            <when test="read==false">
                <![CDATA[
                AND a.read_time is null
                ]]>
            </when>
        </choose>
        <if test="post_time_min != null">
            <![CDATA[
            AND a.post_time >= #{post_time_min}
            ]]>
        </if>
        <if test="post_time_max != null">
            <![CDATA[
            AND a.post_time <= #{post_time_max}
            ]]>
        </if>
        <if test="status != null and status != ''">
            AND a.status IN
            <foreach item="statusCode" collection="status" open="(" separator="," close=")">
                #{statusCode}
            </foreach>
        </if>
        <if test="keyword != null and keyword != ''">
            AND (a.title LIKE concat('%', #{keyword}, '%') OR a.content LIKE concat('%', #{keyword}, '%'))
        </if>
        ORDER BY a.post_time DESC
    </select>

</mapper>