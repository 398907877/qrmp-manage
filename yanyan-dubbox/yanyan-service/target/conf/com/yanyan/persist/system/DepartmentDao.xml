<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yanyan.persist.system.DepartmentDao">

    <cache/>

    <insert id="insertDepartment" parameterType="Department" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO s_department
          (id, corp_id, parent_id, name, pyabbr, pinyin, remarks, priority, create_time)
        VALUES
          (#{id}, #{corp_id}, #{parent_id}, #{name}, #{pyabbr}, #{pinyin}, #{remarks}, #{priority}, #{create_time})
    </insert>

    <update id="updateDepartment" parameterType="Department">
        UPDATE s_department
           SET parent_id = #{parent_id}, name = #{name}, pyabbr = #{pyabbr}, pinyin = #{pinyin},
               priority = #{priority}, remarks = #{remarks}, update_time = #{update_time}
         WHERE id = #{id}
    </update>

    <update id="deleteDepartment">
        DELETE FROM s_department WHERE id = #{id}
    </update>

    <insert id="insertManager">
        INSERT INTO s_manager (dept_id, staff_id) VALUES (#{dept_id}, #{staff_id})
    </insert>

    <delete id="clearManagers">
        DELETE FROM s_manager WHERE dept_id = #{dept_id}
    </delete>

    <sql id="select_manager_sql">
        SELECT id, name, account
          FROM s_manager a, s_staff b
         WHERE a.staff_id = b.id
    </sql>

    <select id="getManagers" resultType="StaffVo">
        <include refid="select_manager_sql"/>
        AND a.dept_id = #{dept_id}
    </select>

    <sql id="select_department_sql">
        SELECT id, corp_id,
               (select t.name from s_corporation t where t.id = a.corp_id) corp_name,
               parent_id,
               (select t.name from s_department t where t.id = a.parent_id) parent_name,
               (select count(*) from s_department t where t.parent_id = a.id) hasChildren,
               path, level, name, pinyin, pyabbr, remarks, priority, create_time, update_time
          FROM s_department a
    </sql>

    <select id="getDepartment" resultType="Department">
        <include refid="select_department_sql"></include>
        <where>
            a.id = #{id}
        </where>
    </select>

    <select id="findDepartment" resultType="Department">
        <include refid="select_department_sql"></include>
        <where>
            <if test="corp_id != null">
                AND a.corp_id = #{corp_id}
            </if>
            <if test="name != null and name != ''">
                AND a.name = #{name}
            </if>
            <if test="parent_id != null">
                AND a.parent_id = #{parent_id}
            </if>
            <if test="create_time_min != null">
                <![CDATA[
                AND a.create_time >= #{create_time_min}
                ]]>
            </if>
            <if test="create_time_max != null">
                <![CDATA[
                AND a.create_time <= #{create_time_max}
                ]]>
            </if>
            <if test="keyword != null and keyword != ''">
                AND (a.name like concat('%', #{keyword}, '%') or REPLACE(a.pinyin, ' ', '') = concat('%', #{keyword}, '%') or a.pyabbr = concat('%', #{keyword}, '%'))
            </if>
        </where>
        ORDER BY a.priority ASC, a.create_time DESC
    </select>

</mapper>