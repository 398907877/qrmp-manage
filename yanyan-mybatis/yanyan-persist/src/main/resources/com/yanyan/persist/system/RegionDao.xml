<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yanyan.persist.system.RegionDao">

    <cache/>

    <insert id="insertRegion" parameterType="Region" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO s_region
          (id, code, name, pinyin, pyabbr, parent_id, priority, create_time)
        VALUES
          (#{id}, #{code}, #{name}, #{pinyin}, #{pyabbr}, #{parent_id}, #{priority}, #{create_time})
    </insert>

    <update id="updateRegion" parameterType="Region">
        UPDATE s_region
           SET code = #{code}, name = #{name}, pinyin = #{pinyin}, pyabbr = #{pyabbr},
               parent_id = #{parent_id}, priority = #{priority},
               update_time = #{update_time}
         WHERE id = #{id}
    </update>

    <update id="deleteRegion">
        delete from s_region where id = #{id}
    </update>

    <sql id="select_region_sql">
        SELECT id, code, name, pinyin, pyabbr, parent_id, path, level, priority,
               (select t.name from s_region t where t.id = a.parent_id) parent_name,
               create_time, update_time
          FROM s_region a
    </sql>

    <select id="getRegion" resultType="Region">
        <include refid="select_region_sql"></include>
        <where>
            a.id = #{id}
        </where>
    </select>

    <select id="findRegion" resultType="Region">
        <include refid="select_region_sql"></include>
        <where>
            <if test="level != null">
                AND a.level = #{level}
            </if>
            <if test="code != null and code != ''">
                AND a.code = #{code}
            </if>
            <if test="name != null and name != ''">
                AND a.name = #{name}
            </if>
            <if test="parent_id != null">
                AND a.parent_id = #{parent_id}
            </if>
            <if test="keyword != null and keyword != ''">
                AND (a.name LIKE concat('%', #{keyword}, '%') OR REPLACE(a.pinyin, ' ', '') = concat('%', #{keyword},
                '%') or a.pyabbr = concat('%', #{keyword}, '%'))
            </if>
        </where>
        ORDER BY a.priority, a.create_time DESC
    </select>

</mapper>